# Named Profile to use for authenticating with AWS
profile = "default"

# Which regions to enfoce the rules in. If its empty, the rules will be enforced
# in all regions
regions = ["us-east-1"]

# Whether to enable dry-mode, which would not terminate/delete any resources
# rather it would just print it out
dry_run = true

# Whether to print the AWS Usage Report by account and service breakdown
print_usage = false
usage_days = 1

[ec2]
# Specifies whether EC2 enforcement is enabled or not
enabled = false
# State to enfoce, if any of the following conditions are not met. Possible
# states are: 'Stopped' and 'Terminated'
target_state = "Stopped"
# Defines required tags on each instance.
required_tags = ["Name", "Email", "Purpose"]
# Defines which instance types are allowed, empty means allow any types
allowed_instance_types = []

    # Identify any EC2 instances that appear to be idle based on the following
    # rules.
    [ec2.idle_rules]
    # Defines CPU utilization rules, the default is if the average CPU
    # utilization for 1 day, each data point aggeregated over 1 hour window,
    # is less than 0.5% then the instance will be enforced to its defined
    # target state
    # Note: 'granularity' max value is 86400 seconds and 'min_duration'
    # max value is 2 weeks without CloudWatch detailed monitoring enabled
    #
    # Defines if idle instances have to be nuked
    enabled = true
    min_utilization = 10
    min_duration = "1 day"
    granularity = "1 hour"

    # Defines whether to acknowledge the teraminate protection, if 'ignore' is
    # set to 'true' then the utility would ignore the termination protection
    # flag and would terminate the instances anyway.
    [ec2.termination_protection]
    ignore = true

[rds]
# Specifies whether RDS enforcement is enabled or not
enabled = true
# State to enfoce, if any of the following conditions are not met. Possible
# states are: 'Stopped' and 'Terminated'
target_state = "Stopped"
# Defines required tags on each instance.
required_tags = ["Name", "Email", "Purpose"]
# Defines which instance types are allowed, empty means allow any types
allowed_instance_types = []

    # Defines CPU utilization rules, the default is if the average CPU
    # utilization for 1 day, each data point aggeregated over 1 hour window,
    # is less than 0.5% then the instance will be enforced to its defined
    # target state
    # Note: 'metric_granularity' max value is 86400 seconds and 'cpu_duration'
    # max value is 2 weeks without CloudWatch detailed monitoring enabled
    [rds.idle_rules]
    enabled = true
    min_utilization = 10
    min_duration = "1 day"
    granularity = "1 hour"
    connections = 50

    # Defines whether to acknowledge the teraminate protection, if 'acknowledge'
    # is set to 'true' then the utility would not try to terminate the instances
    # which has termination protection enabled.
    [rds.termination_protection]
    ignore = true

[aurora]
# Specifies whether RDS enforcement is enabled or not
enabled = true
# State to enfoce, if any of the following conditions are not met. Possible
# states are: 'Stopped' and 'Terminated'
target_state = "Stopped"
# Defines required tags on each instance.
required_tags = ["Name", "Email", "Purpose"]
# Defines which instance types are allowed, empty means allow any types
allowed_instance_types = []

    # Defines CPU utilization rules, the default is if the average CPU
    # utilization for 1 day, each data point aggeregated over 1 hour window,
    # is less than 0.5% then the instance will be enforced to its defined
    # target state
    # Note: 'metric_granularity' max value is 86400 seconds and 'cpu_duration'
    # max value is 2 weeks without CloudWatch detailed monitoring enabled
    [aurora.idle_rules]
    enabled = true
    min_utilization = 10
    min_duration = "1 day"
    granularity = "1 hour"
    connections = 50

    # Defines whether to acknowledge the teraminate protection, if 'acknowledge'
    # is set to 'true' then the utility would not try to terminate the instances
    # which has termination protection enabled.
    [aurora.termination_protection]
    ignore = true

# [security-groups]
# enabled = false
# target_state = "Delete"

#     # Delete any security groups that have the following inbound rules
#     # associated with them
#     [security-groups.rules]
#     [security-groups.rules.inbound]
#     port_range = [ "0-65535" ]
#     source_cidr = [ "0.0.0.0/0" ]

# [redshift]
# enabled = false
# target_state = "Stopped"

#     [redshift.idle]
#     enabled = true

#     # The average number of database connections has been less than 1 for the
#     # last 7 days. The total number of ReadIOPS and WriteIOPS recorded per day
#     # for the last 7 days has been less than 20 on average.
#     [redshift.idle.rules]
#     connections = 1
#     read_ops = 20
#     write_ops = 20
#     duration = "7 days"

# [elasticsearch]
# enabled = false
# target_state = "Stopped"

#     [elasticsearch.idle]
#     enabled = true

#     [elasticsearch.idle.rules]
#     cpu_min_utilization = 2
#     cpu_min_duration = "7 days"
#     metric_granularity = "1 hour"
