# Reference configuration file
#
# Each supported resource type can be configured using its own block. Supported
# resources can be fetched using: `nuker resource-types`.
#
# [resource_name]
# key = value
# key = value
#   [resource_name.map]
#   key = value
#   [[resource_name.array]]
#   key = value
#
# Allowed configuration fields:
# 
# * target_state - defines the enforcement state of the resource in violation of
# rules. Possible values are 'Deleted' or 'Stopped'. When set to 'Stopped', if
# the resource type supports Stopping it then the resource will be stopped. If
# the state is set to 'Deleted' (which is the default), the resources gets
# deleted. Ex:
# 
#   target_state = "Deleted" 
#
# * required_tags - Defines the required tags on each resource type that needs
# to be present, if any of the tag specified in the resource tags is not met,
# then the resource will be enforced to the set target state. Each required tag
# needs a 'name' of the tag that is required and an optional 'pattern' which is
# a regex which can enforced on the value of the tag. Ex:
#
# [[resource_name.required_tags]]
# name = "name-of-tag"
# pattern = "regex-of-value"
#
# * allowed_types - Specifies what types of resources are allowed. Default is
# none, any resource types are allowed.
#
# allowed_types = ["t3.large", "t3.xlarge"]
#
# * whitelist - Specifies a list of whitelisted resource id's that are ignored
# from rules enforcement.
#
# whitelist = ["i-1234567890"]
#
# * idle_rules - Specify any Cloudwatch metrics that has to be enforced on a
# resource. Based on the idle rule a resource can be determined if its idle or
# not. Each idle rule has to specify:
#   - namespace: Namespace is a container for CW metrics. The AWS namespaces
#   typically use the following naming convention 'AWS/service'.
#   - metric: A metric represents a name of the metric that needs to be queried
#   for.
#   - duration: Specifies for how long to query the metric values for
#   - granularity: duration to aggregate the metric values
#   - minimum: value to compare the fetched metric values against
#
# [[ec2_instance.idle_rules]]
# namespace = "AWS/EC2"
# metric = "CPUUtilization"
# minimum = 5
# duration = "1 day"
# granularity = "1 hour"
#
# * termination_protection - specifies whether to ignore termination protection
# setting for applicable resources. If 'ignore' is set to 'true' then the
# termination protection is disabled before attempting to delete the instances.
#
# [resource_name.termination_protection]
# ignore = true
#
# * manage_stopped - when set, applicable resource types that are stopped for a
# specified duration ('older_than') will be deleted.
#
# [resource_name.manage_stopped]
# older_than = "7 days"
#
# * max_run_time - maximum allowed time a type of resource can be up and running
#
# max_run_time = "1 day"
#
# * disable_additional_rules - whether to disable any additional rules enforced
# by each resource type.
#
# disable_additional_rules = true
#
# * naming_prefix - only applicable to S3 buckets; specifies the naming
# convention each bucket should adhere to, if a bucket does not follow this
# pattern, the bucket and all its objects will be deleted.
#
# [s3_bucket]
#     [s3_bucket.naming_prefix]
#     pattern = '^cw-(us-[a-z]*-[0-9]{1})-([0-9]{12})-(.*)$'

[ec2_instance]
allowed_types = ["a1.medium", "a1.large", "a1.xlarge", "t3.nano",
    "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t2.micro", "t2.nano"]

    [[ec2_instance.required_tags]]
    name = "Name"
    pattern = '^ec2-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[ec2_instance.required_tags]]
    name = "Owner:Name"

    [[ec2_instance.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[ec2_instance.required_tags]]
    name = "Purpose"

    [[ec2_instance.required_tags]]
    name = "Environment"

    [[ec2_instance.idle_rules]]
    namespace = "AWS/EC2"
    metric = "CPUUtilization"
    minimum = 5
    duration = "1 day"
    granularity = "1 hour"

    [[ec2_instance.idle_rules]]
    namespace = "AWS/EC2"
    metric = "NetworkIn"
    minimum = 5000000 # 5MB
    duration = "1 day"
    granularity = "1 hour"

    [[ec2_instance.idle_rules]]
    namespace = "AWS/EC2"
    metric = "NetworkOut"
    minimum = 5000000 # 5MB
    duration = "1 day"
    granularity = "1 hour"

    [ec2_instance.termination_protection]
    ignore = true

    [ec2_instance.manage_stopped]
    older_than = "7 days"

[ec2_vpc]
    [[ec2_vpc.required_tags]]
    name = "Name"
    pattern = '^vpc-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-(d|t|s|p)-([a-z0-9\-]+)$'

    [[ec2_vpc.required_tags]]
    name = "Owner:Name"

    [[ec2_vpc.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[ec2_vpc.required_tags]]
    name = "Purpose"

    [[ec2_vpc.required_tags]]
    name = "Environment"

[ebs_volume]
allowed_types = ["gp2", "standard"]

    [[ebs_volume.idle_rules]]
    namespace = "AWS/EBS"
    metric = "VolumeReadOps"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

    [[ebs_volume.idle_rules]]
    namespace = "AWS/EBS"
    metric = "VolumeWriteOps"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"    

[ebs_snapshot]
max_run_time = "7 days"

[s3_bucket]
    [s3_bucket.naming_prefix]
    pattern = '^cw-(us-[a-z]*-[0-9]{1})-([0-9]{12})-(.*)$'

[asg]
    [[asg.required_tags]]
    name = "Name"
    pattern = '^asg-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[asg.required_tags]]
    name = "Owner:Name"

    [[asg.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[asg.required_tags]]
    name = "Purpose"

    [[asg.required_tags]]
    name = "Environment"

[elb_alb]
    [[elb_alb.required_tags]]
    name = "Name"
    pattern = '^(elb)-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[elb_alb.required_tags]]
    name = "Owner:Name"

    [[elb_alb.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[elb_alb.required_tags]]
    name = "Purpose"

    [[elb_alb.required_tags]]
    name = "Environment"

    [[elb_alb.idle_rules]]
    namespace = "AWS/ApplicationELB"
    metric = "RequestCount"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

[elb_nlb]
    [[elb_nlb.required_tags]]
    name = "Name"
    pattern = '^(elb)-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[elb_nlb.required_tags]]
    name = "Owner:Name"

    [[elb_nlb.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[elb_nlb.required_tags]]
    name = "Purpose"

    [[elb_nlb.required_tags]]
    name = "Environment"

    [[elb_nlb.idle_rules]]
    namespace = "AWS/NetworkELB"
    metric = "ProcessedBytes"
    minimum = 1024
    duration = "1 day"
    granularity = "1 hour"

[rds_instance]
    [[rds_instance.required_tags]]
    name = "Name"
    pattern = '^rds-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[rds_instance.required_tags]]
    name = "Owner:Name"

    [[rds_instance.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[rds_instance.required_tags]]
    name = "Purpose"

    [[rds_instance.required_tags]]
    name = "Environment"

    [[rds_instance.idle_rules]]
    namespace = "AWS/RDS"
    metric = "DatabaseConnections"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

    [[rds_instance.idle_rules]]
    namespace = "AWS/RDS"
    metric = "ReadIOPS"
    minimum = 20
    duration = "1 day"
    granularity = "1 hour"

    [[rds_instance.idle_rules]]
    namespace = "AWS/RDS"
    metric = "WriteIOPS"
    minimum = 20
    duration = "1 day"
    granularity = "1 hour"

    [rds_instance.manage_stopped]
    older_than = "7 days"

    [rds_instance.termination_protection]
    ignore = true

[rds_cluster]

    [[rds_cluster.required_tags]]
    name = "Name"
    pattern = '^rds-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[rds_cluster.required_tags]]
    name = "Owner:Name"

    [[rds_cluster.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[rds_cluster.required_tags]]
    name = "Purpose"

    [[rds_cluster.required_tags]]
    name = "Environment"

    [[rds_cluster.idle_rules]]
    namespace = "AWS/RDS"
    metric = "DatabaseConnections"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

    [[rds_cluster.idle_rules]]
    namespace = "AWS/RDS"
    metric = "ReadIOPS"
    minimum = 20
    duration = "1 day"
    granularity = "1 hour"

    [[rds_cluster.idle_rules]]
    namespace = "AWS/RDS"
    metric = "WriteIOPS"
    minimum = 20
    duration = "1 day"
    granularity = "1 hour"

    [rds_cluster.termination_protection]
    ignore = true

[rs_cluster]
    [[rs_cluster.required_tags]]
    name = "Name"
    pattern = '^rs-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[rs_cluster.required_tags]]
    name = "Owner:Name"

    [[rs_cluster.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[rs_cluster.required_tags]]
    name = "Purpose"

    [[rs_cluster.required_tags]]
    name = "Environment"

    [[rs_cluster.idle_rules]]
    namespace = "AWS/Redshift"
    metric = "DatabaseConnections"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

    [[rs_cluster.idle_rules]]
    namespace = "AWS/Redshift"
    metric = "ReadIOPS"
    minimum = 20
    duration = "1 day"
    granularity = "1 hour"

    [[rs_cluster.idle_rules]]
    namespace = "AWS/Redshift"
    metric = "WriteIOPS"
    minimum = 20
    duration = "1 day"
    granularity = "1 hour"

[emr_cluster]
allowed_types = ["m3.xlarge", "m4.large", "m4.xlarge", "m5.xlarge"]
max_run_time = "8 hours"

    [[emr_cluster.required_tags]]
    name = "Name"
    pattern = '^emr-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[emr_cluster.required_tags]]
    name = "Owner:Name"

    [[emr_cluster.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[emr_cluster.required_tags]]
    name = "Purpose"

    [[emr_cluster.required_tags]]
    name = "Environment"

    [[emr_cluster.idle_rules]]
    namespace = "AWS/ElasticMapReduce"
    metric = "IsIdle"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

    [emr_cluster.termination_protection]
    ignore = true

[glue_endpoint]
max_run_time = "8 hours"

    # Defines required tags on each instance.
    [[glue_endpoint.required_tags]]
    name = "Name"
    pattern = '^glue-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[glue_endpoint.required_tags]]
    name = "Owner:Name"

    [[glue_endpoint.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[glue_endpoint.required_tags]]
    name = "Purpose"

    [[glue_endpoint.required_tags]]
    name = "Environment"

[sagemaker_notebook]
allowed_types = ["ml.t2.medium", "ml.t2.large", "ml.t2.xlarge", "ml.t2.2xlarge",
    "ml.t3.medium", "ml.t3.large", "ml.t3.xlarge", "ml.t3.2xlarge" ]
max_run_time = "8 hours"

    [[sagemaker_notebook.required_tags]]
    name = "Name"
    pattern = '^sagemaker-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[sagemaker_notebook.required_tags]]
    name = "Owner:Name"

    [[sagemaker_notebook.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[sagemaker_notebook.required_tags]]
    name = "Purpose"

    [[sagemaker_notebook.required_tags]]
    name = "Environment"

[es_domain]
    [[es_domain.required_tags]]
    name = "Name"
    pattern = '^es-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[es_domain.required_tags]]
    name = "Owner:Name"

    [[es_domain.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[es_domain.required_tags]]
    name = "Purpose"

    [[es_domain.required_tags]]
    name = "Environment"

    [[es_domain.idle_rules]]
    namespace = "AWS/ES"
    metric = "CPUUtilization"
    minimum = 5
    duration = "1 day"
    granularity = "1 hour"

    [[es_domain.idle_rules]]
    namespace = "AWS/ES"
    metric = "ElasticsearchRequests"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

[ecs_cluster]
    [[ecs_cluster.required_tags]]
    name = "Name"
    pattern = '^ecs-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[ecs_cluster.required_tags]]
    name = "Owner:Name"

    [[ecs_cluster.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[ecs_cluster.required_tags]]
    name = "Purpose"

    [[ecs_cluster.required_tags]]
    name = "Environment"

    [[ecs_cluster.idle_rules]]
    namespace = "AWS/ECS"
    metric = "CPUReservation"
    minimum = 5
    duration = "1 day"
    granularity = "1 hour"

    [[ecs_cluster.idle_rules]]
    namespace = "AWS/ECS"
    metric = "MemoryReservation"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"

[eks_cluster]
    [[eks_cluster.required_tags]]
    name = "Name"
    pattern = '^eks-(ue1|ue2|uw1|uw2|ew1|ec1|an1|an2|as1|as2|se1)-([1-2]{1})([a-c]{1})-(d|t|s|p)-([a-z0-9\-]+)$'

    [[eks_cluster.required_tags]]
    name = "Owner:Name"

    [[eks_cluster.required_tags]]
    name = "Owner:Email"
    pattern = '^(.*)@(.*).com$'

    [[eks_cluster.required_tags]]
    name = "Purpose"

    [[eks_cluster.required_tags]]
    name = "Environment"

    [[eks_cluster.idle_rules]]
    namespace = "AWS/EKS"
    metric = "CPUReservation"
    minimum = 5
    duration = "1 day"
    granularity = "1 hour"

    [[eks_cluster.idle_rules]]
    namespace = "AWS/EKS"
    metric = "MemoryReservation"
    minimum = 1
    duration = "1 day"
    granularity = "1 hour"